・評価関数を分けた4種類
・ビットボードを用いることで計算やオーバーヘッドを少なくし，探索を深くした
・必勝読みは勝てる手が見つかったらそれをうってしまう
・alphabetaを利用（厳密にはnegamaxを利用）
・残り時間に合わせて評価を打ち切ることも
・マルチスレッドによる実装
・勝敗予測（デバッグがやりやすかった）


やりたかったことtodo
・定石
・negamax計算の際，sortしてから計算する方がカットしやすい
・開放度計算d
・実行時変数に対応
・ハードコーディングにしか対応してない
・uiがかすい

対人戦のイメージ
・4つ角を取ろうとするも，取れない
・計算がはやい
・4つ角とれるのに舐めプされた
・おける場所がめちゃ少なくされてうざかった